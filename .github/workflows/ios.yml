name: Build iOS App

on:
  workflow_dispatch:
  push:
    branches:
      - dev_1.0
  pull_request:
    branches:
      - dev_1.0

jobs:
  ios:
    runs-on: macos-latest

    steps:
      - name: 代码迁出
        uses: actions/checkout@v4

      - name: 安装Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2.10.0
        with:
          cache: true
          flutter-version: 3.24.0

      - name: Restore packages
        run: flutter pub get

      # 1. 显式指定 Xcode 版本
      - name: 指定 Xcode 版本
        run: sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer

      # 2. 检查 Xcode 路径
      - name: 检查 Xcode 路径
        run: xcode-select -p

      # 3. 查找 PackageApplication 路径 (不再使用环境变量)
      - name: 查找 PackageApplication 路径
        run: |
          PACKAGE_APPLICATION_PATH=$(find /Applications/Xcode*.app -name PackageApplication)
          echo "PackageApplication Path: $PACKAGE_APPLICATION_PATH"

      # 4.  赋予 Xcode 工具链 下二进制文件 可执行权限
      - name: chmod 赋予可执行权限
        run: |
          find /Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin -type f -exec sudo chmod +x {} \;


      # 5. 构建 IPA
      - name: flutter build ipa
        run: |
          flutter build ios --release --no-codesign
          # 使用查找的路径，并使用 sudo 执行
          PACKAGE_APPLICATION_PATH=$(find /Applications/Xcode*.app -name PackageApplication)
          sudo xcrun -sdk iphoneos "$PACKAGE_APPLICATION_PATH" -v build/ios/iphoneos/Runner.app -o build/app.ipa


      - name: 上传 Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Release
          path: build/app.ipa
