name: Build Apps for iOS and Android

on:
  workflow_dispatch:
  push:
    branches:
      - dev_1.0  # 或者你的主分支名
  pull_request:
    branches:
      - dev_1.0

jobs:
  android:
    # 运行环境 ubuntu-latest window-latest mac-latest
    runs-on: ubuntu-latest

    # 每个jobs中可以有多个steps
    steps:
      - name: 代码迁出
        uses: actions/checkout@v3

      - name: 构建Java环境
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          token: ${{secrets.GIT_TOKEN}}

      - name: 检查缓存
        uses: actions/cache@v2
        id: cache-flutter
        with:
          path: /root/flutter-sdk # Flutter SDK 的路径
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: 安装Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
#          flutter-version: 3.24.0
          flutter-version: 3.27.0
          channel: any

      - name: 下载项目依赖
        run: flutter pub get

      - name: flutter build apk
        run: flutter build apk --release --split-per-abi


      - name: flutter build apk
        run: flutter build apk --release


      - name: 上传 Android 产物
        uses: actions/upload-artifact@v4
        with:
          name: linyu_mobile-android-release
          path: build/app/outputs/flutter-apk/*.apk

  ios:
    runs-on: macos-latest

    steps:
      - name: 代码迁出
        uses: actions/checkout@v4

      - name: 安装Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2.10.0
        with:
          cache: true
#          flutter-version: 3.24.0
          flutter-version: 3.27.0

      - name: flutter build ipa
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload/
          zip -r app.ipa Payload/
          mv app.ipa ../../app.ipa

      - name: 上传 Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linyu_mobile-ios-Release
          path: build/app.ipa

#  upload:
#    runs-on: ubuntu-latest
#
#    needs:
#      - android
#      - iOS
#    steps:
#      - name: 下载 Android 制品
#        uses: actions/download-artifact@v3
#        with:
#          name: linyu_mobile-android-release
#          path: ./linyu_mobile-android-release.zip    # 下载到 android-release 文件夹
#
#      - name: 下载 iOS 制品
#        uses: actions/download-artifact@v3
#        with:
#          name: linyu_mobile-ios-Release
#          path: ./linyu_mobile-ios-Release.zip   # 下载到 Pilipala-Release 文件夹
#      - name: Install dependencies
#        run: sudo apt-get install tree -y
#
#      - name: Get version
#        id: version
#        run: echo "version=${GITHUB_REF#refs/tags/v}" >>$GITHUB_OUTPUT
#
#      - name: Upload Release
#        uses: ncipollo/release-action@v1
#        with:
#          name: v${{ steps.version.outputs.version }}
#          token: ${{ secrets.GIT_TOKEN }}
#          omitBodyDuringUpdate: true
#          omitNameDuringUpdate: true
#          omitPrereleaseDuringUpdate: true
#          allowUpdates: true
#          artifacts: |
#            android-release/*
#            Pilipala-Release/*   # 上传两个文件夹下的所有文件
